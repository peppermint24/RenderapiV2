# requirements.txt
fastapi==0.109.0
uvicorn[standard]==0.27.0
pydantic==2.5.3
pandas==2.1.4
numpy==1.26.3
shapely==2.0.2
pyarrow==14.0.2
httpx==0.26.0
python-multipart==0.0.6

# Dockerfile
FROM python:3.11-slim

WORKDIR /app

# Install system dependencies for shapely
RUN apt-get update && apt-get install -y \
    gcc \
    g++ \
    && rm -rf /var/lib/apt/lists/*

# Copy requirements first for better caching
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# Copy application code
COPY main.py .

# Create data directory mount point
RUN mkdir -p /data

# Set environment variables
ENV PYTHONUNBUFFERED=1
ENV PORT=8000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8000/healthz || exit 1

# Run the application
CMD ["python", "main.py"]

# .env.example (for local development)
API_KEY=your-secure-api-key-here
API_BEARER=optional-second-key-for-rotation

DATA_DIR=/data
GEOMS_PATH=/data/tracts_wkb.parquet
SCORES_PATH=/data/tract_lookup.json
HUMIDITY_PATH=/data/zip_humidity_scores.csv
CLAIMS_PATH=/data/claims_proportion.json

PERPLEXITY_API_KEY=your-perplexity-key-here
PERPLEXITY_MODEL=sonar

W_SES=0.35
W_BUILD_YEAR=0.10
W_FLOOD=0.35
W_HUMIDITY=0.20

# docker-compose.yml (for local development)
version: '3.8'

services:
  api:
    build: .
    ports:
      - "8000:8000"
    volumes:
      - ./data:/data
    env_file:
      - .env
    environment:
      - ENV=development

# render.yaml (for Render deployment)
services:
  - type: web
    name: property-score-api
    env: docker
    dockerfilePath: ./Dockerfile
    disk:
      name: property-data
      mountPath: /data
      sizeGB: 2
    envVars:
      - key: API_KEY
        generateValue: true
      - key: DATA_DIR
        value: /data
      - key: GEOMS_PATH
        value: /data/tracts_wkb.parquet
      - key: SCORES_PATH
        value: /data/tract_lookup.json
      - key: HUMIDITY_PATH
        value: /data/zip_humidity_scores.csv
      - key: CLAIMS_PATH
        value: /data/claims_proportion.json
      - key: PERPLEXITY_API_KEY
        sync: false
      - key: W_SES
        value: "0.35"
      - key: W_BUILD_YEAR
        value: "0.10"
      - key: W_FLOOD
        value: "0.35"
      - key: W_HUMIDITY
        value: "0.20"

# test_api.sh (testing script)
#!/bin/bash

API_KEY="your-api-key"
BASE_URL="http://localhost:8000"

echo "Testing health check..."
curl -s "$BASE_URL/healthz" | jq .

echo "\nTesting SES score..."
curl -s -H "X-API-Key: $API_KEY" \
  "$BASE_URL/ses/score?lat=34.0522&lon=-118.2437" | jq .

echo "\nTesting flood score..."
curl -s -H "X-API-Key: $API_KEY" \
  "$BASE_URL/flood?lat=34.0522&lon=-118.2437&zip=90012" | jq .

echo "\nTesting humidity score..."
curl -s -H "X-API-Key: $API_KEY" \
  "$BASE_URL/humidity?zip=90012" | jq .

echo "\nTesting build year..."
curl -s -H "X-API-Key: $API_KEY" \
  -H "Content-Type: application/json" \
  -d '{"hotel_name":"The Maybourne Beverly Hills","address":"225 N Canon Dr, Beverly Hills, CA"}' \
  "$BASE_URL/build_year" | jq .

echo "\nTesting total score..."
curl -s -H "X-API-Key: $API_KEY" \
  "$BASE_URL/score/total?lat=34.0522&lon=-118.2437&zip=90012&hotel_name=The%20Maybourne%20Beverly%20Hills&address=225%20N%20Canon%20Dr%2C%20Beverly%20Hills%2C%20CA" | jq .